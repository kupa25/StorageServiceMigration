// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Suddath.Helix.JobMgmt.Infrastructure.Domain;
using Suddath.Helix.JobMgmt.Models;

namespace Suddath.Helix.TaskMgmt.Infrastructure.Domain
{
    public partial class TaskMgmtDbContext : DbContext
    {
        private string _connectionString;

        public TaskMgmtDbContext()
        {
        }

        public TaskMgmtDbContext(string connectionString)
        {
            _connectionString = connectionString;
        }

        public TaskMgmtDbContext(DbContextOptions<TaskMgmtDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<JobMgmt.Infrastructure.Domain.Note> Note { get; set; }
        public virtual DbSet<JobMgmt.Models.WorkflowTask> WorkflowTask { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=TasksDatabase;Integrated Security=true");


            modelBuilder.Entity<JobMgmt.Infrastructure.Domain.Note>(entity =>
            {
                entity.HasIndex(e => e.CreatedBy)
                    .HasName("IX_Notes_CreatedBy");

                entity.HasIndex(e => e.ReferenceId)
                    .HasName("IX_Notes_ReferenceId");

                entity.Property(e => e.Category).HasMaxLength(50);

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DisplayId).HasMaxLength(50);

                entity.Property(e => e.Message)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Module).HasMaxLength(50);
            });

            modelBuilder.Entity<JobMgmt.Models.WorkflowTask>(entity =>
            {
                entity.HasIndex(e => new { e.ReferenceId, e.Module })
                    .HasName("IX__ReferenceID_Module");

                entity.Property(e => e.AssignedTo)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Category).HasMaxLength(100);

                entity.Property(e => e.CompletedBy).HasMaxLength(100);

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("getutcdate()");

                entity.Property(e => e.DisplayId)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("'unkown'");

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ModifiedDate).HasDefaultValueSql("getutcdate()");

                entity.Property(e => e.Module)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Subject)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(_connectionString);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}